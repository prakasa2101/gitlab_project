#!/bin/bash


## Base variables
AWS_ACCOUNTS=`ls -d live/* | sed 's/live\///g' | xargs`

## Pipeline stages  
for stage in $AWS_ACCOUNTS
do

  # For DEV trigger automatically, for other stages only in manual mode
  if [ $stage = "dev" ]; then
    run_mode="manual"
  else
    run_mode="manual"
  fi

    cat <<EOT >> dynamic_apply_$stage.yml
stages:
  - APPLY $stage-common
  - APPLY $stage

### Gitlab Worker Image template
.worker_image:
  image:
    name: \$\$IAC_IMAGE_\$AWS_ACCOUNT
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

### APPLY template
.apply_template:
  extends: 
    - .worker_image
  tags:
     - \$AWS_ACCOUNT 
     - \$IAC_RUNNER
  allow_failure: false
  before_script:    
    - eval \$(aws sts assume-role --role-arn arn:aws:iam::\$(aws sts get-caller-identity --query Account --output text):role/terraform-executor --role-session-name terraform-run-\${AWS_ACCOUNT}-\$CI_PIPELINE_ID | jq -r '.Credentials | "export AWS_ACCESS_KEY_ID=\(.AccessKeyId)\nexport AWS_SECRET_ACCESS_KEY=\(.SecretAccessKey)\nexport AWS_SESSION_TOKEN=\(.SessionToken)\n"')
  rules:
    - if: '\$CI_PARENT_PIPELINE_SOURCE == "web" && \$CI_PARENT_COMMIT_REF_NAME == \$CI_DEFAULT_BRANCH'   
      when: $run_mode
    - if: '\$CI_PARENT_PIPELINE_SOURCE == "push" && \$CI_PARENT_COMMIT_REF_NAME == \$CI_DEFAULT_BRANCH'
      when: $run_mode

EOT
done


## Loop over all stages
for stage in $AWS_ACCOUNTS
do
    ENVIRONMENTS=`find live/$stage/  -maxdepth 1 -type d | xargs | sed "s/live\/${stage}\///g"`
    for env in $ENVIRONMENTS
    do        
        TG_ROOT="live/$stage/$env"
        LAYERS=`find $TG_ROOT -type f -name terragrunt.hcl -not -path "*.terragrunt-cache*" | xargs  -i sh -c 'd="{}"; echo  ${d%/*}'`

        env_extend=""
        if [ $env = "common" ]; then
            env_extend="-${env}"
        fi

        for layer in $LAYERS
        do     
          cat <<EOT >> dynamic_apply_$stage.yml

APPLY-$env-${layer##*/}:
  stage: APPLY $stage$env_extend
  extends: 
    - .apply_template    
  variables:
    AWS_ACCOUNT: $stage
    TF_ROOT: \${CI_PROJECT_DIR}/${layer}/
  script:
    - echo "Terraform APPLY for ${layer##*/} in \${TF_ROOT}" 
    - cd \${TF_ROOT}
    - terragrunt init
    - terragrunt apply -auto-approve
EOT
          deps=`grep "config_path" $layer/terragrunt.hcl | cut -d"=" -f2 | sed -e 's/\s//g' -e  's/\.\.\///g' -e 's/\"//g'  | xargs`
          if [  -z "$deps" ]; then
            cat <<EOT >> dynamic_apply_$stage.yml
  needs: []
EOT
          else
            cat <<EOT >> dynamic_apply_$stage.yml
  needs:
EOT
            for dep in $deps
            do 
              if [[ $dep == *"common"* ]]; then
                cat <<EOT >> dynamic_apply_$stage.yml
    - Terraform-APPLY-common-${dep##*/}
EOT
              else 
                cat <<EOT >> dynamic_apply_$stage.yml
    - Terraform-APPLY-$env-${dep##*/}
EOT
              fi
            done
          fi
        done
    done
done
